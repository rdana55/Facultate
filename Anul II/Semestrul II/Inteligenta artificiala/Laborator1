{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOEklqbP8aRsydUcGyKsuZc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#4. Să se determine cuvintele unui text care apar exact o singură dată în acel text.\n","#De ex. cuvintele care apar o singură dată în \"ana are ana are mere rosii ana\" sunt: 'mere' și 'rosii'.\n","\n","#O(n) toate 3 - n nr total cuvinte"],"metadata":{"id":"cy7ZPYInAYw-"}},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nl-scuknASYx","executionInfo":{"status":"ok","timestamp":1709904328107,"user_tz":-120,"elapsed":759,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"cedd5263-9223-4a30-8875-5de16c37c520"},"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 4.1\n","\n","Varianta 4.2\n","\n","Varianta ChatGPT\n"]}],"source":["from collections import Counter\n","import re\n","\n","#textI = input(\"Introduceti un text pentru exercitiul 4: \")\n","\n","def varianta41(textI):\n","    text = textI.split()\n","    frecventa = {}\n","    rez=[]\n","    for cuvant in text:\n","        if cuvant in frecventa:\n","            frecventa[cuvant] += 1\n","        else:\n","            frecventa[cuvant] = 1\n","    for cuvant in text:\n","        if frecventa[cuvant] == 1:\n","            rez.append(cuvant)\n","    return rez\n","\n","\n","#O(n log n)\n","def varianta42(textI):\n","    text = textI.split()\n","    text.sort()\n","    rez=[]\n","    for i in range(len(text)):\n","        if i == 0 and text[i] != text[i + 1]:\n","            rez.append(text[i])\n","        elif i == len(text) - 1 and text[i] != text[i - 1]:\n","            rez.append(text[i])\n","        elif text[i] != text[i - 1] and text[i] != text[i + 1]:\n","            rez.append(text[i])\n","    return rez\n","\n","def chatGpt4(textI):\n","    # Se elimină semnele de punctuație și se împart cuvintele\n","    words = re.findall(r'\\b\\w+\\b', textI.lower())\n","\n","    # Se numără aparițiile fiecărui cuvânt\n","    word_count = Counter(words)\n","\n","    # Se selectează cuvintele care apar o singură dată\n","    unique_words = [word for word, count in word_count.items() if count == 1]\n","\n","    return unique_words\n","\n","\n","print(\"Varianta 4.1\")\n","assert(varianta41(\"ana are ana are mere ana\")==['mere'])\n","#varianta41(textI)\n","print(\"\\nVarianta 4.2\")\n","assert(varianta42(\"ana are ana are mere ana\")==['mere'])\n","#varianta42(textI)\n","print(\"\\nVarianta ChatGPT\")\n","assert(chatGpt4(\"ana are ana are mere ana\")==['mere'])"]},{"cell_type":"markdown","source":["#1. Să se determine ultimul (din punct de vedere alfabetic)\n","#cuvânt care poate apărea într-un text care conține mai multe cuvinte separate prin ” ” (spațiu).\n","#De ex. ultimul (dpdv alfabetic) cuvânt din ”Ana are mere rosii si galbene” este cuvântul \"si\".\n","\n","#O(n log n) - varianta 1 si ChatGPT\n","#O(n) - varianta 2\n","# n nr cuvinte"],"metadata":{"id":"xB9OyFIpAXqO"}},{"cell_type":"code","source":["#text1=input(\"Introduceti un text pentru exercitiul 1: \")\n","\n","def varianta11(text1):\n","    text=text1.split()\n","    text.sort()\n","    return text[len(text)-1]\n","\n","def varianta12(text1):\n","    text=text1.split()\n","    for i in range(len(text)-1):\n","        if text[i]>text[i+1]:\n","            cuvant=text[i]\n","        else:\n","            cuvant=text[i+1]\n","    return cuvant\n","\n","def chatGpt1(text1):\n","    cuvinte = text1.split()  # Descompunem textul în cuvinte\n","    cuvinte.sort()          # Sortăm cuvintele în ordine alfabetică\n","    ultimul_cuvant = cuvinte[-1]  # Alegem ultimul cuvânt din lista sortată\n","    return ultimul_cuvant\n","\n","\n","print(\"Varianta 1.1\")\n","assert(varianta11(\"Ana are mere rosii si galbene\")==\"si\")\n","#varianta11(text1)\n","print(\"\\nVarianta 1.2\")\n","assert(varianta12(\"Ana are mere rosii si galbene\")==\"si\")\n","#varianta12(text1)\n","print(\"\\nVarianta ChatGPT\")\n","assert(chatGpt1(\"Ana are mere rosii si galbene\")==\"si\")\n","#chatGpt1(text1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2NvkTkxAWOa","executionInfo":{"status":"ok","timestamp":1709901971143,"user_tz":-120,"elapsed":3,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"c892ff52-9cbb-43b0-db07-75113cde59e7"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 1.1\n","\n","Varianta 1.2\n","\n","Varianta ChatGPT\n"]}]},{"cell_type":"markdown","source":["#5. Pentru un șir cu n elemente care conține valori din mulțimea {1, 2, ..., n - 1} astfel încât o singură valoare se repetă de două ori,\n","#să se identifice acea valoare care se repetă.\n","#De ex. în șirul [1,2,3,4,2] valoarea 2 apare de două ori.\n","\n","#O(n) toate 3 - n nr elemente sir"],"metadata":{"id":"qZxOXn_7BFKG"}},{"cell_type":"code","source":["#text5=input(\"Introduceti un sir de n numere cu valori pana la n-1, astfel incat una singura sa se repete: \")\n","\n","def varianta51(text5):\n","    numere=text5.split()\n","    frecventa = {}\n","    for numar in numere:\n","        if numar in frecventa:\n","            frecventa[numar] += 1\n","        else:\n","            frecventa[numar] = 1\n","    for numar in numere:\n","        if frecventa[numar] == 2:\n","            return numar\n","            return\n","\n","def varianta52(text5):\n","    numere=text5.split()\n","    numere.sort()\n","    for i in range(len(numere)):\n","        if i == 0 and numere[i] == numere[i + 1]:\n","            return numere[i]\n","        elif i == len(numere) - 1 and numere[i] == numere[i - 1]:\n","            return numere[i]\n","        elif numere[i] == numere[i - 1] or numere[i] == numere[i + 1]:\n","            return numere[i]\n","\n","\n","def chatGpt5(text5):\n","    sir = [int(x) for x in text5.split()]\n","    aparitii = set()\n","    for valoare in sir:\n","        if valoare in aparitii:\n","            return valoare\n","        aparitii.add(valoare)\n","\n","\n","print(\"Varianta 5.1\")\n","assert(varianta51(\"1 2 3 4 2\")=='2')\n","#varianta51(text5)\n","print(\"\\nVarianta 5.2\")\n","assert(varianta52(\"1 2 3 4 2\")=='2')\n","#varianta52(text5)\n","print(\"\\nVarianta ChatGPT\")\n","assert(chatGpt5(\"1 2 3 4 2\")==2)\n","#valoare_repetata = chatGpt5(text5)\n","#print(\"Valoarea care se repetă este:\", valoare_repetata)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dcsvQ-n3A8QF","executionInfo":{"status":"ok","timestamp":1709902137274,"user_tz":-120,"elapsed":288,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"292a12b5-0864-48d6-cda6-06e9c0192d1d"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 5.1\n","\n","Varianta 5.2\n","\n","Varianta ChatGPT\n"]}]},{"cell_type":"markdown","source":["#10. Considerându-se o matrice cu n x m elemente binare (0 sau 1) sortate crescător pe linii,\n","#să se identifice indexul liniei care conține cele mai multe elemente de 1.\n","\n","#O(n*m) toate 3"],"metadata":{"id":"t-CWKnrYBLoJ"}},{"cell_type":"code","source":["'''\n","linii=[]\n","print(\"Introduceti matricea: \")\n","while True:\n","    linie=input()\n","    if linie == '0':\n","        break;\n","    linii.append(linie)\n","'''\n","\n","def varianta101(linii):\n","    lin=0\n","    max1=0\n","    for linie in linii:\n","        max2=0\n","        for bit in linie:\n","            if bit=='1':\n","                max2+=1\n","        if max1<max2:\n","            max1=max2\n","            lin+=1\n","    return lin\n","\n","def varianta102(linii):\n","    frecventa={}\n","    i=1\n","    for linie in linii:\n","        nr=0\n","        for bit in linie:\n","            if bit=='0':\n","                nr+=1\n","        frecventa[i]=nr\n","        i+=1\n","    minim=min(frecventa.values())\n","    for j in range(1,i):\n","        if frecventa[j]==minim:\n","            return j\n","\n","def chatGpt10(linii):\n","    matrice=[]\n","    for linie in linii:\n","        linie_elemente = list(map(int, linie.split()))\n","        matrice.append(linie_elemente)\n","    nr_linii = len(matrice)\n","    nr_coloane = len(matrice[0]) if nr_linii > 0 else 0\n","\n","    max_1 = 0\n","    index_linie_max_1 = -1\n","\n","    for i in range(nr_linii):\n","        contor_1 = 0\n","        for j in range(nr_coloane):\n","            if matrice[i][j] == 1:\n","                contor_1 += 1\n","            else:\n","                break  # Odată ce am găsit primul 0 pe linie, putem opri parcurgerea acestei linii\n","\n","        if contor_1 > max_1:\n","            max_1 = contor_1\n","            index_linie_max_1 = i\n","\n","    return index_linie_max_1\n","\n","\n","\n","print(\"Varianta 10.1\")\n","assert(varianta101([\"0 0 0 1\",\"0 1 1 1\",\"0 0 1 1\"])==2)\n","#varianta101(linii)\n","print(\"\\nVarianta 10.2\")\n","assert(varianta102([\"0 0 0 1\",\"0 1 1 1\",\"0 0 1 1\"])==2)\n","#varianta102(linii)\n","print(\"\\nVarianta ChatGPT\")\n","try:\n","    assert(chatGpt10([\"0 0 0 1\",\"0 1 1 1\",\"0 0 1 1\"])==2)\n","except:\n","    print(\"Solutie ChatGpt gresita\")\n","#chatGpt10(linii)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"__x17W5oBL-Y","executionInfo":{"status":"ok","timestamp":1709904409129,"user_tz":-120,"elapsed":267,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"2b3904e9-5074-4e5d-a6b0-b2fb10cc1533"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 10.1\n","\n","Varianta 10.2\n","\n","Varianta ChatGPT\n","Solutie ChatGpt gresita\n"]}]},{"cell_type":"markdown","source":["#7. Să se determine al k-lea cel mai mare element al unui șir de numere cu n elemente (k < n).\n","#De ex. al 2-lea cel mai mare element din șirul [7,4,6,3,9,1] este 7.\n","\n","#O(n log n) - varianta 1 si ChatGPT\n","#O(n log k) - varianta 2 (mai buna decat sortarea completa)\n","#n nr elemente sir"],"metadata":{"id":"E_f9KMkDBUZV"}},{"cell_type":"code","source":["#k=int(input(\"Introduceti k: \"))\n","#sir=input(\"Introduceti un sir de numere: \")\n","#numereN = sir.split()\n","#numereN = [int(nr) for nr in numereN]\n","\n","def varianta71(numereN,k):\n","    lista=numereN.copy()\n","    for i in range(1,k):\n","        el=max(lista)\n","        lista.remove(el)\n","    return max(lista)\n","\n","def varianta72(numereN,k):\n","    numereN.sort(reverse=True)\n","    return numereN[k-1]\n","\n","def chatGpt7(numereN, k):\n","    numereN.sort(reverse=True)\n","    return numereN[k - 1]\n","\n","\n","print(\"Varianta 7.1\")\n","assert(varianta71([1,2,3,4,5,6,7],2)==6)\n","#varianta71(numereN,k)\n","print(\"\\nVarianta 7.2\")\n","assert(varianta72([1,2,3,4,5,6,7],2)==6)\n","#varianta72(numereN,k)\n","print(\"\\nVarianta ChatGPT\")\n","assert(chatGpt7([1,2,3,4,5,6,7],2)==6)\n","#kth_largest = chatGpt7(numereN, k)\n","#print(f\"Al {k}-lea cel mai mare element este: {kth_largest}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uaPx547WBUw0","executionInfo":{"status":"ok","timestamp":1709902726753,"user_tz":-120,"elapsed":292,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"aa744fde-e8ce-4bf8-cdb6-f3f076a72f9a"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 7.1\n","\n","Varianta 7.2\n","\n","Varianta ChatGPT\n"]}]},{"cell_type":"markdown","source":["#8. Să se genereze toate numerele (în reprezentare binară) cuprinse între 1 și n. De ex. dacă n = 4, numerele sunt: 1, 10, 11, 100.\n","\n","#O(n log n) ambele - n nr pana la cat se genereaza"],"metadata":{"id":"23j7q8EgBfGp"}},{"cell_type":"code","source":["#n=int(input(\"Introduceti un numar: \"))\n","\n","def varianta81(n):\n","    lista=[]\n","    for i in range(1,n+1):\n","        lista.append(bin(i)[2:])\n","    return lista\n","\n","def chatGpt8(n):\n","    numere_binar = []\n","    for i in range(1, n + 1):\n","        numere_binar.append(bin(i)[2:])\n","    return numere_binar\n","\n","\n","print(\"Varianta 8.1\")\n","assert(varianta81(4)==['1','10','11','100'])\n","#varianta81(n)\n","print(\"\\nVarianta ChatGPT\")\n","assert(chatGpt8(4)==['1','10','11','100'])\n","#chatGpt8(n)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLGvjfvXBgwD","executionInfo":{"status":"ok","timestamp":1709902560327,"user_tz":-120,"elapsed":257,"user":{"displayName":"Dana Rusu","userId":"09652823823802193394"}},"outputId":"8accf266-9414-44df-d784-8116b59fda7b"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Varianta 8.1\n","\n","Varianta ChatGPT\n"]}]}]}